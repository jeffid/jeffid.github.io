<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>设计模式 - 标签 - 万酷库</title><link>https://waacoo.cc/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>设计模式 - 标签 - 万酷库</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 01 Oct 2022 00:20:00 +0800</lastBuildDate><atom:link href="https://waacoo.cc/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" rel="self" type="application/rss+xml"/><item><title>Golang 单例模式与sync.Once</title><link>https://waacoo.cc/112_glang-singleton/</link><pubDate>Sat, 01 Oct 2022 00:20:00 +0800</pubDate><author>Jeffid</author><guid>https://waacoo.cc/112_glang-singleton/</guid><description>背景 单例模式可以说是最简单的设计模式之一了，功能很简单：一个类型的东西只实例化一次，全局只有一个实例，并提供方法来获取该实例。 在 Golang 中变量或说</description></item></channel></rss>